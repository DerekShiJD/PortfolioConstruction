# Use machine learning to estimate the expected return of each stock and SP500

import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression


def linear_regression(SP500_data, all_data, freq, name):
    SP500_exp_ret = []
    all_exp_ret = []

    length = len(SP500_data[0])
    stock_num = len(all_data)

    SP500_data = np.array(SP500_data)
    all_data = np.array(all_data)

    # SP500
    SP500_x = np.array(range(length))
    SP500_x = SP500_x.reshape(SP500_x.shape[0], 1)
    SP500_y = SP500_data[0, :, 0]

    model = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=True)
    model.fit(SP500_x, SP500_y)

    rate_a = model.coef_[0]
    rate_b = model.intercept_
    SP500_unit_rate = (length - 1) * rate_a / (rate_a + rate_b)

    if freq == 'month':
        SP500_EAR = (1 + SP500_unit_rate) ** (12 / (length - 1)) - 1
        SP500_exp_ret.append(SP500_EAR)
    elif freq == 'week':
        SP500_EAR = (1 + SP500_unit_rate) ** (52 / (length - 1)) - 1
        SP500_exp_ret.append(SP500_EAR)
    else:
        SP500_exp_ret.append('error')

    predicted = model.predict(SP500_x)
    plt.plot(SP500_x, SP500_y, marker='+', label='S&P500 index')
    plt.plot(SP500_x, predicted, c='r', linestyle=':')
    plt.xlabel(freq.capitalize())
    plt.ylabel("Close")
    # plt.show()

    # All stocks
    stock_x = SP500_x
    for i in range(stock_num):
        stock_y = all_data[i, :, 0]
        model = LinearRegression(copy_X=True, fit_intercept=True, n_jobs=1, normalize=False)
        model.fit(stock_x, stock_y)

        rate_a = model.coef_[0]
        rate_b = model.intercept_

        stock_unit_rate = (length - 1) * rate_a / (rate_a + rate_b)

        if freq == 'month':
            stock_EAR = (1 + stock_unit_rate) ** (12 / (length - 1)) - 1
            all_exp_ret.append(stock_EAR)
        elif freq == 'week':
            stock_EAR = (1 + stock_unit_rate) ** (52 / (length - 1)) - 1
            all_exp_ret.append(stock_EAR)
        else:
            all_exp_ret.append('error')

        predicted = model.predict(stock_x)
        plt.plot(stock_x, stock_y, marker='x', label=name[i])
        plt.plot(stock_x, predicted, c='r', linestyle=':')
        plt.xlabel(freq.capitalize())
        plt.ylabel("Close")
        # plt.show()

    plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=0,
               ncol=4, mode="expand", borderaxespad=0.)
    # plt.show()

    return SP500_exp_ret, all_exp_ret


if __name__ == '__main__':

    # SP500_data = [[[2362.72, -0.00038923017041515325], [2384.2, 0.009091216902552999], [2411.8, 0.011576210049492646], [2423.41, 0.00481383199270241], [2470.3, 0.019348768883515513], [2471.65, 0.0005464923288669023], [2519.36, 0.019302894827342074], [2575.26, 0.02218817477454595], [2584.84, 0.0037200127365780255], [2673.61, 0.03434255118305194], [2823.81, 0.05617872464570368]]]
    # all_data = [[[191.33, 1.175, 0.033029246042393504], [195.83, 0.0, 0.023519573511733654], [204.47, 0.0, 0.04411989991318994], [208.19, 1.175, 0.02393994228982252], [201.17, 0.0, -0.03371919880878049], [204.32, 0.0, 0.01565839836953823], [209.9, 1.175, 0.03306088488645274], [230.19, 0.0, 0.09666507860886132], [243.14, 0.0, 0.056257873930231496], [235.37, 1.175, -0.027124290532203547], [250.5, 0.0, 0.06428176912945573]], [[130.13, 0.0, 0.09962818996112888], [133.74, 0.0, 0.027741489279950925], [141.86, 0.0, 0.060714819799611214], [141.44, 0.0, -0.002960665444804849], [146.49, 0.0, 0.03570418552036207], [155.16, 0.0, 0.059184927298791636], [149.18, 0.0, -0.03854086104666145], [175.16, 0.0, 0.174152031103365], [181.47, 0.0, 0.036024206439826456], [175.24, 0.0, -0.03433074337356031], [199.76, 0.0, 0.13992239214791133]], [[183.44, 0.0, 0.002130565419284274], [186.97, 0.73, 0.023222852158743954], [189.23, 0.0, 0.012087500668556404], [195.11, 0.0, 0.031073297045923078], [201.4, 0.73, 0.03597970375685501], [199.44, 0.0, -0.009731876861966275], [195.95, 0.0, -0.017498997192138033], [208.67, 0.73, 0.06863995917325844], [228.21, 0.0, 0.09364067666650702], [214.06, 0.0, -0.06200429429034663], [242.94, 0.75, 0.13841913482201249]], [[107.37, 1.08, -0.035999999999999976], [106.7, 0.0, -0.006240104312191503], [103.48, 0.0, -0.030178069353327074], [104.33, 1.08, 0.01865094704290677], [109.19, 0.0, 0.046582957921978335], [107.62, 0.0, -0.014378606099459595], [117.5, 1.08, 0.10183980672737403], [115.89, 0.0, -0.013702127659574462], [118.99, 0.0, 0.026749503839848084], [125.19, 1.08, 0.06118161190015969], [125.35, 0.0, 0.0012780573528236808]]]

    SP500_data = [[[1994.99, -0.031040847054252307], [2104.5, 0.054892505726845744], [2067.89, -0.017396056070325554], [2085.51, 0.008520762709815487], [2107.39, 0.010491438545008008], [2063.11, -0.02101177285647163], [2103.84, 0.019742039930008587], [1972.18, -0.0625808046239258], [1920.03, -0.026442819620927142], [2079.36, 0.08298307838940025], [2080.41, 0.0005049630655585022], [2043.94, -0.017530198374358805], [1940.24, -0.05073534448173628], [1932.23, -0.004128355255019993], [2059.74, 0.0659911087189412], [2065.3, 0.0026993698233759604], [2096.95, 0.015324650171887683], [2098.86, 0.0009108467059301887], [2173.6, 0.035609807228685945], [2170.95, -0.0012191755612808663], [2168.27, -0.0012344825997834296], [2126.15, -0.01942562503747222], [2198.81, 0.034174446769983234], [2238.83, 0.01820075404423301], [2278.87, 0.017884341374735897], [2363.64, 0.03719826054140867], [2362.72, -0.00038923017041515325], [2384.2, 0.009091216902552999], [2411.8, 0.011576210049492646], [2423.41, 0.00481383199270241], [2470.3, 0.019348768883515513], [2471.65, 0.0005464923288669023], [2519.36, 0.019302894827342074], [2575.26, 0.02218817477454595], [2584.84, 0.0037200127365780255], [2673.61, 0.03434255118305194]]]
    all_data = [[[162.3, 0.0, -0.012293086660175158], [168.65, 0.0, 0.03912507701786811], [164.95, 1.025, -0.015861251111770006], [156.39, 0.0, -0.05189451348893606], [159.08, 0.0, 0.017200588272907644], [154.3, 1.025, -0.023604475735478973], [151.34, 0.0, -0.019183408943616382], [142.14, 0.0, -0.060790273556231116], [141.77, 1.025, 0.004608132826790697], [157.21, 0.0, 0.10890879593708117], [156.58, 0.0, -0.004007378665479266], [150.64, 1.025, -0.03138970494316017], [151.0, 0.0, 0.0023898035050452316], [156.87, 0.0, 0.038874172185430496], [166.63, 1.11, 0.06929304519665969], [167.38, 0.0, 0.004500990217847927], [168.32, 0.0, 0.005615963675468979], [175.12, 1.11, 0.046993821292775816], [178.36, 0.0, 0.018501598903609005], [179.24, 0.0, 0.00493384166853552], [176.23, 1.11, -0.010600312430261133], [165.3, 0.0, -0.06202122226635635], [171.74, 0.0, 0.038959467634603735], [178.49, 1.11, 0.04576685687667412], [174.82, 0.0, -0.020561375987450364], [186.35, 0.0, 0.06595355222514587], [191.33, 1.175, 0.033029246042393504], [195.83, 0.0, 0.023519573511733654], [204.47, 0.0, 0.04411989991318994], [208.19, 1.175, 0.02393994228982252], [201.17, 0.0, -0.03371919880878049], [204.32, 0.0, 0.01565839836953823], [209.9, 1.175, 0.03306088488645274], [230.19, 0.0, 0.09666507860886132], [243.14, 0.0, 0.056257873930231496], [235.37, 1.175, -0.027124290532203547]], [[70.13, 0.0, -0.03535075653370024], [79.1, 0.0, 0.12790531869385427], [73.94, 0.0, -0.06523388116308466], [76.06, 0.0, 0.02867189613199898], [79.09, 0.0, 0.03983697081251645], [81.01, 0.0, 0.024276141105070193], [81.99, 0.0, 0.012097271941735462], [78.57, 0.0, -0.04171240395170145], [82.22, 0.0, 0.046455390098001856], [88.66, 0.0, 0.07832644125516904], [91.46, 0.0, 0.03158132190390252], [93.94, 0.0, 0.02711567898534883], [89.13, 0.0, -0.05120289546519057], [85.15, 0.0, -0.04465387636037238], [93.8, 0.0, 0.10158543746329995], [94.22, 0.0, 0.004477611940298526], [99.47, 0.0, 0.05572065378900446], [95.79, 0.0, -0.03699607921986521], [97.86, 0.0, 0.021609771374882483], [102.31, 0.0, 0.045473124872266533], [108.54, 0.0, 0.0608933633075946], [107.51, 0.0, -0.009489589091579152], [102.81, 0.0, -0.04371686354757699], [102.95, 0.0, 0.0013617352397626745], [113.38, 0.0, 0.10131131617289939], [118.34, 0.0, 0.043746692538366626], [130.13, 0.0, 0.09962818996112888], [133.74, 0.0, 0.027741489279950925], [141.86, 0.0, 0.060714819799611214], [141.44, 0.0, -0.002960665444804849], [146.49, 0.0, 0.03570418552036207], [155.16, 0.0, 0.059184927298791636], [149.18, 0.0, -0.03854086104666145], [175.16, 0.0, 0.174152031103365], [181.47, 0.0, 0.036024206439826456], [175.24, 0.0, -0.03433074337356031]], [[138.08, 0.6, -0.003449267030755891], [146.72, 0.0, 0.06257242178447267], [143.59, 0.0, -0.021333151581243152], [140.87, 0.6, -0.014764259349536906], [140.51, 0.0, -0.00255554766806285], [141.65, 0.0, 0.008113301544374172], [152.15, 0.6, 0.07836216025414751], [142.95, 0.0, -0.060466644758462154], [132.66, 0.0, -0.07198321091290656], [142.52, 0.6, 0.07884818332579532], [150.25, 0.0, 0.0542380016839741], [154.09, 0.0, 0.02555740432612315], [145.37, 0.66, -0.052307093257187375], [147.45, 0.0, 0.014308316709087048], [151.82, 0.0, 0.029637165140725702], [161.26, 0.66, 0.06652614938743245], [166.45, 0.0, 0.032184050601513074], [169.59, 0.0, 0.01886452388104545], [176.0, 0.66, 0.04168877881950583], [177.21, 0.0, 0.006875000000000045], [179.73, 0.0, 0.014220416455053224], [167.91, 0.66, -0.06209313970956433], [169.1, 0.0, 0.007087130010124458], [165.55, 0.0, -0.020993494973388427], [177.29, 0.73, 0.07532467532467514], [183.05, 0.0, 0.032489142083591965], [183.44, 0.0, 0.002130565419284274], [186.97, 0.73, 0.023222852158743954], [189.23, 0.0, 0.012087500668556404], [195.11, 0.0, 0.031073297045923078], [201.4, 0.73, 0.03597970375685501], [199.44, 0.0, -0.009731876861966275], [195.95, 0.0, -0.017498997192138033], [208.67, 0.73, 0.06863995917325844], [228.21, 0.0, 0.09364067666650702], [214.06, 0.0, -0.06200429429034663]], [[102.53, 0.0, -0.08602246389730794], [106.68, 0.0, 0.040475958256120215], [104.98, 1.07, -0.005905511811023712], [111.06, 0.0, 0.05791579348447321], [103.0, 0.0, -0.07257338375652803], [96.47, 1.07, -0.053009708737864154], [88.48, 0.0, -0.0828236757541204], [80.99, 0.0, -0.08465189873417732], [78.88, 1.07, -0.012841091492776964], [90.88, 0.0, 0.15212981744421908], [91.32, 0.0, 0.004841549295774623], [89.96, 1.07, -0.003175646079719736], [86.47, 0.0, -0.03879502000889279], [83.44, 0.0, -0.0350410547010524], [95.4, 1.07, 0.15616011505273253], [102.18, 0.0, 0.07106918238993712], [101.0, 0.0, -0.01154824818946963], [104.83, 1.07, 0.04851485148514843], [102.48, 0.0, -0.022417246971286792], [100.58, 0.0, -0.01854020296643253], [102.92, 1.07, 0.03390336050904749], [104.75, 0.0, 0.01778080062184219], [111.56, 0.0, 0.06501193317422437], [117.7, 1.08, 0.06471853711007529], [111.35, 0.0, -0.05395072217502131], [112.5, 0.0, 0.010327795240233549], [107.37, 1.08, -0.035999999999999976], [106.7, 0.0, -0.006240104312191503], [103.48, 0.0, -0.030178069353327074], [104.33, 1.08, 0.01865094704290677], [109.19, 0.0, 0.046582957921978335], [107.62, 0.0, -0.014378606099459595], [117.5, 1.08, 0.10183980672737403], [115.89, 0.0, -0.013702127659574462], [118.99, 0.0, 0.026749503839848084], [125.19, 1.08, 0.06118161190015969]]]

    name = ['MMM', 'ADBE', 'BDX', 'CVX']

    SP500_exp_ret, all_exp_ret = linear_regression(SP500_data, all_data, 'month', name)
    a = 1

